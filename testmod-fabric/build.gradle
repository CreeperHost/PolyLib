plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

loom {

    runs {
        datagenClient {
            client()
            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            //This will be ignored but is needed for now to load Fabrics datagen
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated/resources")}"

            vmArg "-Dpolylib.datagen.output-dir-common=${project(":testmod-common").file("src/generated/resources")}"
            vmArg "-Dpolylib.datagen.output-dir-forge=${project(":testmod-forge").file("src/generated/resources")}"
            vmArg "-Dpolylib.datagen.output-dir-fabric=${project(":testmod-fabric").file("src/generated/resources")}"

//            vmArg "-Dfabric-api.datagen.strict-validation=false"

            ideConfigGenerated = true
            runDir "build/datagen"
        }
    }

    accessWidenerPath = project(":testmod-common").loom.accessWidenerPath

//    mixin { useLegacyMixinAp = true }
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common
    shadowLib
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    shadowCommon.extendsFrom shadowLib
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
    implementation.extendsFrom shadowLib
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    implementation "blue.endless:jankson:1.2.1"

    implementation project(path: ":fabric", configuration: "namedElements")
    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    common(project(path: ":testmod-common", configuration: "namedElements")) { transitive false }

//    modLocalRuntime 'RebornCore:RebornCore-1.20:5.8.0'
//    modLocalRuntime 'TechReborn:TechReborn-1.20:5.8.0'

//    modCompileOnly "mezz.jei:jei-${rootProject.minecraft_version}-fabric-api:${rootProject.jei_version}"
//    modRuntimeOnly "mezz.jei:jei-${rootProject.minecraft_version}-fabric:${rootProject.jei_version}"
}

publishing {

}
